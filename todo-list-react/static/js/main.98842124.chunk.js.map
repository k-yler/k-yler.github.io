{"version":3,"sources":["Redux/state.js","TodoItem.jsx","Form.jsx","App.js","reportWebVitals.js","index.js"],"names":["ADD_TODO","DELETE_TODO","CHANGE_TODO","CHANGE_CHECKED","ADD_TODO_TO_STORAGE","KEY","state","_todo","todos","checked","id","newTodoLine","_rerender","getTodo","this","getTodosFromStorage","store","localStorage","getItem","console","log","JSON","parse","subscriber","observer","_setTodo","arrTodo","setItem","stringify","dispatch","action","type","trim","length","todo","Date","now","push","i","splice","value","task","addTodoStorageCreator","window","TodoItem","props","style","className","onChange","e","target","parentElement","onClick","From","text","onKeyDown","keyCode","preventDefault","rows","placeholder","App","map","el","Form","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","renderTree","ReactDOM","render","StrictMode","bind","document","getElementById"],"mappings":"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","file":"static/js/main.98842124.chunk.js","sourcesContent":["const ADD_TODO = 'ADD-TODO';\r\nconst DELETE_TODO = 'DELETE-TODO';\r\nconst CHANGE_TODO = 'CHANGE-TODO';\r\nconst CHANGE_CHECKED = 'CHANGE-CHECKED';\r\nconst ADD_TODO_TO_STORAGE = 'ADD-TODO-TO-STORAGE';\r\nconst KEY = \"todo\";\r\n\r\nconst state = {\r\n    _todo: [\r\n        {todos: \"todo 1\", checked: false, id: 1},\r\n        {todos: \"todo 2\", checked: true, id: 2},\r\n        {todos: \"todo 3\", checked: false, id: 3}\r\n    ],\r\n    newTodoLine: \"\",\r\n    _rerender(){},\r\n    getTodo(){\r\n        return this._todo;\r\n    },\r\n    getTodosFromStorage(){\r\n        let store = localStorage.getItem(KEY);\r\n        console.log(store);\r\n        if(typeof store === 'string'){\r\n            console.log(\"nan\");\r\n            return JSON.parse(store);\r\n        } else {\r\n            return [];\r\n        }\r\n    },\r\n    subscriber(observer){\r\n      this._rerender = observer;\r\n    },\r\n    _setTodo(arrTodo){\r\n        localStorage.setItem(KEY, JSON.stringify(arrTodo));\r\n        this._rerender(state);\r\n    },\r\n    dispatch(action){\r\n        if(action.type === ADD_TODO){\r\n            console.log(\"add task\");\r\n            if(this.newTodoLine.trim().length > 0){\r\n                let todo = {todos: this.newTodoLine, checked: false, id: Date.now()};\r\n                this._todo.push(todo);\r\n                this.newTodoLine = '';\r\n                this._rerender(state);\r\n            }\r\n        } else if (action.type === DELETE_TODO){\r\n            console.log('delete todo');\r\n            // debugger;\r\n            let todo = this.getTodosFromStorage();\r\n            for( let i = 0; i < todo.length; i++){\r\n                if(action.id == todo[i].id){\r\n                    todo.splice(i, 1);\r\n                }\r\n            }\r\n            this._setTodo(todo);\r\n        } else if (action.type === CHANGE_TODO){\r\n            this.newTodoLine = action.value;\r\n            console.log('CHANGE-TODO');\r\n            this._rerender(state);\r\n        } else if (action.type === CHANGE_CHECKED){\r\n            let todo = this.getTodosFromStorage();\r\n            for( let i = 0; i < todo.length; i++){\r\n                if(action.id == todo[i].id){\r\n                    todo[i].checked = !todo[i].checked;\r\n                    this._setTodo(todo);\r\n                }\r\n            }\r\n        } else if (action.type === ADD_TODO_TO_STORAGE){\r\n            console.log(\"storage todo\");\r\n            let todo = this.getTodosFromStorage();\r\n            if(this.newTodoLine.trim().length > 0){\r\n                let task = {todos: this.newTodoLine, checked: false, id: Date.now()};\r\n                todo.push(task);\r\n                this.newTodoLine = '';\r\n                this._rerender(state);\r\n                this._setTodo(todo)\r\n            }\r\n        }\r\n    }\r\n};\r\nexport const changeTodoCreator = (value) => {\r\n    return {type: CHANGE_TODO, value: value}\r\n}\r\nexport const addTodoCreator = () => {\r\n    return {type: ADD_TODO}\r\n}\r\nexport const deleteTodoCreator = (todoId) => {\r\n    return {type: DELETE_TODO, id: todoId}\r\n}\r\nexport const changeCneckedCreator = todoId => {\r\n    return {type: CHANGE_CHECKED, id: todoId}\r\n}\r\nexport const addTodoStorageCreator = () => {\r\n    return {type: ADD_TODO_TO_STORAGE}\r\n}\r\n\r\n// localStorage.setItem('todo', JSON.stringify(state.getTodo()));\r\n// let local = JSON.parse(localStorage.getItem('todo'));\r\n// localStorage.clear();\r\nwindow.state = state;\r\nexport default state;","import React from \"react\";\r\nimport {changeCneckedCreator, changeTodoCreator, deleteTodoCreator} from \"./Redux/state\";\r\n\r\n\r\nconst TodoItem = (props) => {\r\n\r\n    const clickOnLabel = (e) => {\r\n        // console.log('parent', e.target.parentElement.parentElement.id);\r\n        let id = e.target.parentElement.parentElement.id;\r\n        // console.log(id)\r\n        props.dispatch(changeCneckedCreator(id))\r\n    }\r\n    const deleteTodo = (e) => {\r\n        // console.log('parent', e.target.parentElement.id);\r\n        // console.log(e)\r\n        let id = e.target.parentElement.id;\r\n        props.dispatch(deleteTodoCreator(id));\r\n    }\r\n\r\n    let style = `todo-item ${props.checked}`\r\n    return (\r\n        <div className={style} id={props.id}>\r\n            <label >\r\n                <input type=\"checkbox\" checked={props.checked} onChange={clickOnLabel}/>\r\n                {props.todos}\r\n            </label>\r\n            <button className='delete' onClick={deleteTodo}>&#10006;</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoItem;\r\n","import React from \"react\";\r\nimport {addTodoCreator, addTodoStorageCreator, changeTodoCreator} from \"./Redux/state\";\r\n\r\n\r\nconst From = (props) => {\r\n    const changeTextarea = (e) =>{\r\n        let text = e.target.value;\r\n        props.dispatch(changeTodoCreator(text));\r\n    }\r\n    const addTodo = () => {\r\n        // props.dispatch(addTodoCreator());\r\n        props.dispatch(addTodoStorageCreator());\r\n    }\r\n    const enterPressed = (e) => {\r\n        if(e.keyCode === 13){\r\n            e.preventDefault();\r\n            // props.dispatch(addTodoCreator());\r\n            props.dispatch(addTodoStorageCreator());\r\n        }\r\n    }\r\n    return (\r\n        <div className='form'>\r\n            <textarea onChange={changeTextarea} onKeyDown={enterPressed} rows=\"3\" value={props.text} placeholder='Do you really wanna make a new todo?'/>\r\n            <button className='add-todo' onClick={addTodo} >Add Todo</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default From;\r\n","import './App.css';\nimport TodoItem from \"./TodoItem\";\nimport Form from \"./Form\";\n\nfunction App(props) {\n   let todos = props.state.getTodosFromStorage().map(el => {\n       return <TodoItem id={el.id} todos={el.todos} checked={el.checked} dispatch={props.dispatch}/>\n   });\n  console.log(todos)\n  return (\n      <div>\n          <h2 className='header'>To-do List by React</h2>\n        <div className=\"App\">\n            <div>{todos.length ? todos : <p className='no-todo'>You don't have todo!</p>}</div>\n            <Form dispatch={props.dispatch} text={props.state.newTodoLine}/>\n         </div>\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport state from './Redux/state';\n\n\nconst renderTree = (state) => {\n    ReactDOM.render(\n        <React.StrictMode>\n            <App state={state} dispatch={state.dispatch.bind(state)}/>\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n}\nrenderTree(state);\n\nstate.subscriber(renderTree);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}